g++ -Wall -o build *.cpp
Algorithms.cpp:26:2: error: ‘vector’ in namespace ‘std’ does not name a type
  std::vector<PCB> swappedProcesses;
  ^
Algorithms.cpp: In constructor ‘SchedAlgoParams::SchedAlgoParams(int)’:
Algorithms.cpp:19:27: error: class ‘SchedAlgoParams’ does not have any field named ‘degreeOfMultiprogramming’
  SchedAlgoParams(int m) : degreeOfMultiprogramming(m) {}
                           ^
In file included from /usr/include/c++/4.8/random:35:0,
                 from Process.cpp:20:
/usr/include/c++/4.8/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
 #error This file requires compiler and library support for the \
  ^
Process.cpp: In constructor ‘Process::Process(int)’:
Process.cpp:53:5: error: ‘random_device’ was not declared in this scope
     random_device rd;
     ^
Process.cpp:53:19: error: expected ‘;’ before ‘rd’
     random_device rd;
                   ^
Process.cpp:54:5: error: ‘mt19937’ was not declared in this scope
     mt19937 gen(rd());
     ^
Process.cpp:54:13: error: expected ‘;’ before ‘gen’
     mt19937 gen(rd());
             ^
Process.cpp:57:5: error: ‘normal_distribution’ was not declared in this scope
     normal_distribution<> cycle(6000,CYCLE_STANDARD_DEVIATION);
     ^
Process.cpp:57:25: error: expected primary-expression before ‘>’ token
     normal_distribution<> cycle(6000,CYCLE_STANDARD_DEVIATION);
                         ^
Process.cpp:57:62: error: ‘cycle’ was not declared in this scope
     normal_distribution<> cycle(6000,CYCLE_STANDARD_DEVIATION);
                                                              ^
Process.cpp:58:30: error: ‘gen’ was not declared in this scope
     int number = round(cycle(gen));
                              ^
Process.cpp:58:34: error: ‘round’ was not declared in this scope
     int number = round(cycle(gen));
                                  ^
Process.cpp:67:25: error: expected primary-expression before ‘>’ token
     normal_distribution<> footprint(20,FOOTPRINT_STANDARD_DEVIATION);
                         ^
Process.cpp:67:68: error: ‘footprint’ was not declared in this scope
     normal_distribution<> footprint(20,FOOTPRINT_STANDARD_DEVIATION);
                                                                    ^
Process.cpp: In function ‘int main(int, const char**)’:
Process.cpp:89:44: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for(int i = 0; i < setOfProcesses.size(); i++) {
                                            ^
In file included from Scheduler.h:5:0,
                 from Scheduler.cpp:6:
ProcessTable.h:19:3: error: default argument missing for parameter 6 of ‘PCB::PCB(int, int, int, int, ProcessState, int, int, int, int)’
   PCB(int procID = 0, int iArrv = 0, int iTotlRun =0,
   ^
ProcessTable.h: In constructor ‘PCB::PCB(int, int, int, int, ProcessState, int, int, int, int)’:
ProcessTable.h:23:17: error: expected ‘(’ before ‘,’ token
     : iProcessID, iTimeSubmitted(iArrv), 
                 ^
ProcessTable.h:24:40: error: ‘Wait’ was not declared in this scope
     iTotalRunTime(iTotlRun), iWaitTime(Wait), state(st),
                                        ^
ProcessTable.h:27:5: error: class ‘PCB’ does not have any field named ‘iTrueTotRunTime’
     iTrueTotRunTime(iTotlRun) 
     ^
ProcessTable.h:37:15: warning: ‘PCB::state’ will be initialized after [-Wreorder]
  ProcessState state;
               ^
ProcessTable.h:36:6: warning:   ‘int PCB::iEndTime’ [-Wreorder]
  int iEndTime;
      ^
ProcessTable.h:19:3: warning:   when initialized here [-Wreorder]
   PCB(int procID = 0, int iArrv = 0, int iTotlRun =0,
   ^
ProcessTable.h:39:6: warning: ‘PCB::iTurnAroundTime’ will be initialized after [-Wreorder]
  int iTurnAroundTime;
      ^
ProcessTable.h:35:6: warning:   ‘int PCB::iQuantum’ [-Wreorder]
  int iQuantum;
      ^
ProcessTable.h:19:3: warning:   when initialized here [-Wreorder]
   PCB(int procID = 0, int iArrv = 0, int iTotlRun =0,
   ^
In file included from Algorithms.h:15:0,
                 from Scheduler.h:6,
                 from Scheduler.cpp:6:
ProcessTable.h: At global scope:
ProcessTable.h:10:6: error: multiple definition of ‘enum ProcessState’
 enum ProcessState{ READY, RUNNING, NOT_LOADED, DONE };
      ^
In file included from Scheduler.h:5:0,
                 from Scheduler.cpp:6:
ProcessTable.h:10:6: error: previous definition here
 enum ProcessState{ READY, RUNNING, NOT_LOADED, DONE };
      ^
In file included from Algorithms.h:15:0,
                 from Scheduler.h:6,
                 from Scheduler.cpp:6:
ProcessTable.h:17:9: error: redefinition of ‘struct PCB’
  struct PCB
         ^
In file included from Scheduler.h:5:0,
                 from Scheduler.cpp:6:
ProcessTable.h:17:9: error: previous definition of ‘struct PCB’
  struct PCB
         ^
In file included from Algorithms.h:15:0,
                 from Scheduler.h:6,
                 from Scheduler.cpp:6:
ProcessTable.h:45:9: error: redefinition of ‘struct ProcessTable’
  struct ProcessTable { std::vector<PCB>Processes; };
         ^
In file included from Scheduler.h:5:0,
                 from Scheduler.cpp:6:
ProcessTable.h:45:9: error: previous definition of ‘struct ProcessTable’
  struct ProcessTable { std::vector<PCB>Processes; };
         ^
In file included from Scheduler.cpp:6:0:
Scheduler.h:18:3: error: ‘SchedulingAlgorithm’ does not name a type
   SchedulingAlgorithm *algorithm;
   ^
Scheduler.h:19:3: error: ‘SchedAlgoParams’ does not name a type
   SchedAlgoParams algoParams;
   ^
Scheduler.h:20:3: error: ‘std’ in namespace ‘std’ does not name a type
   std::std::vector<PCB> readyProcesses;
   ^
Scheduler.h:23:3: error: ‘SchedulingAlgorithm’ does not name a type
   SchedulingAlgorithm *CreateAlgorithm(const std::string &AlgorithmName);
   ^
Scheduler.h:42:3: error: ‘SchedAlgoParams’ does not name a type
   SchedAlgoParams *GetSchedAlgoParams(){ return &algoParams }
   ^
Scheduler.cpp:12:9: error: ‘std’ in namespace ‘std’ does not name a type
 typedef std::std::vector<PCB>::iterator ReadyProcItr; 
         ^
Scheduler.cpp:16:109: error: default argument given for parameter 3 of ‘Scheduler::Scheduler(const string&, int, int, int)’ [-fpermissive]
 Scheduler::Scheduler(const std::string &AlgorithmName, int contextSwitchPenalty, int quantum = 0, int degree):algoParams(degree)
                                                                                                             ^
In file included from Scheduler.cpp:6:0:
Scheduler.h:29:3: error: after previous specification in ‘Scheduler::Scheduler(const string&, int, int, int)’ [-fpermissive]
   Scheduler(const std::string &AlgorithmName, int contextSwitchPenalty, int quantum = 0, int m = 0);
   ^
Scheduler.cpp: In constructor ‘Scheduler::Scheduler(const string&, int, int, int)’:
Scheduler.cpp:16:111: error: class ‘Scheduler’ does not have any field named ‘algoParams’
 Scheduler::Scheduler(const std::string &AlgorithmName, int contextSwitchPenalty, int quantum = 0, int degree):algoParams(degree)
                                                                                                               ^
Scheduler.cpp:18:2: error: ‘algoParams’ was not declared in this scope
  algoParams.
  ^
Scheduler.cpp:20:2: error: expected ‘;’ before ‘algoParams’
  algoParams
  ^
make: *** [make] Error 1
